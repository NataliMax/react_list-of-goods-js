{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA6BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA/BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACxCI,EAAa,YAAOD,GAuBxB,OArBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EAEH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EAEH,OAAOY,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXP,IACFI,EAAgBA,EAAcM,WAGzBN,EAOcO,CAAiBlB,EACpC,CAAEK,YAAWE,eAEf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPd,EAAaL,IAEfoB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcJ,IAN9B,iCAYA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,QAAS,WACPZ,GAAeD,IAEjBc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAff,IANhB,sBAYiB,KAAfF,IAAqC,IAAfE,IACtB,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAc,IAEhBa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,oBAAIA,UAAU,WAAd,SACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEEL,UAAU,WACV,UAAQ,OAHV,SAKGK,GAJIA,YC1GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2338e1b5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n\n          return good1.length - good2.length;\n\n        case SORT_FIELD_NAME:\n\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD_NAME);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== ('') || isReversed === true) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"GoodList\">\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            className=\"GoodCard\"\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}